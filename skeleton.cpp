// shikureto_dump.cpp : définit le point d'entrée pour l'application console.
//

#include "stdafx.h"

int string_length(char* p){
	int i = 0;
	while(p[i]!='\0'){
		i++;
	}
	return i;
}

// temporaire, a integrer dans main
// retourne le couple (numero de l'argument argv, indice du cararactere dans cet argument) de l'input a print
void print_pointer(int i, _TCHAR* argv[], int tableau[]){
	int j = 0;
	int longueur = 0;
	while (longueur < i){
		j++;
		longueur += string_length((char*)argv[j]);
		longueur ++;
		/*if (longueur < i){
			longueur ++;}*/
	}
	longueur -= i;
	tableau[0] = j;
	tableau[1] = longueur;
}



int main(int argc, _TCHAR* argv[])
{	
	int tab[2];
	int i = 6;
	int n = 0;
//	for (int k=1; k<argc; k++){
//		n+=string_length((char*) argv[k]);
//		n+=1;
//	}
//	n-=1;
	print_pointer(i, argv, tab);
	printf("(%d, %d)\n", tab[0], tab[1]);
	if (tab[1] != 0 && i != n){
		char* temp = (char*) argv[tab[0]];
		printf("%c\n", (char)temp[tab[1]-2]); 
	}
	else if (i == n){
		printf("fin");
	}
	else {printf("space\n");}
//	int s = 1234;
//	int c = 0;
//	int n = 0;
//	for (int k=1; k<argc; k++){
//		n+=string_length((char*) argv[k]);
//		n+=1;
//	}
//	n-=1;
//	printf("longueur de la chaine : %d\n", n);
//
//	return 0;
//
//	if(n>=1){
//		if(s=!1){
//			__asm{
//syracuse_reset:
//			}
//			if(s%2==0){
//				c++;
//				s = s/2;
//				// process
//			}
//			else{
//				c+=4;
//				s = 3*s+1;
//				// process
//			}
//			__asm{
//			jmp syracuse_reset
//			}
//		}
//		else{
//			printf("
//		}
//	}
//	else{
//	}
	return 0;
}

